diff -urN openh264-2.2.0.orig/codec/common/meson.build openh264-2.2.0/codec/common/meson.build
--- openh264-2.2.0.orig/codec/common/meson.build	2022-01-28 05:57:33.000000000 +0100
+++ openh264-2.2.0/codec/common/meson.build	2022-04-24 16:58:09.777345344 +0200
@@ -58,8 +58,6 @@
   else
     cpp_sources += asm_sources
   endif
-else
-  error('Unsupported cpu_family @0@'.format(cpu_family))
 endif
 
 libcommon = static_library('common', cpp_sources, objs_asm,
diff -urN openh264-2.2.0.orig/codec/decoder/meson.build openh264-2.2.0/codec/decoder/meson.build
--- openh264-2.2.0.orig/codec/decoder/meson.build	2022-01-28 05:57:33.000000000 +0100
+++ openh264-2.2.0/codec/decoder/meson.build	2022-04-24 16:58:09.777345344 +0200
@@ -49,8 +49,6 @@
   else
     cpp_sources += asm_sources
   endif
-else
-  error('Unsupported cpu family @0@'.format(cpu_family))
 endif
 
 libdecoder = static_library('decoder', cpp_sources, objs_asm,
diff -urN openh264-2.2.0.orig/codec/encoder/meson.build openh264-2.2.0/codec/encoder/meson.build
--- openh264-2.2.0.orig/codec/encoder/meson.build	2022-01-28 05:57:33.000000000 +0100
+++ openh264-2.2.0/codec/encoder/meson.build	2022-04-24 16:58:09.777345344 +0200
@@ -74,8 +74,6 @@
   else
     cpp_sources += asm_sources
   endif
-else
-  error('Unsupported cpu family @0@'.format(cpu_family))
 endif
 
 libencoder = static_library('encoder', cpp_sources, objs_asm,
diff -urN openh264-2.2.0.orig/codec/processing/meson.build openh264-2.2.0/codec/processing/meson.build
--- openh264-2.2.0.orig/codec/processing/meson.build	2022-01-28 05:57:33.000000000 +0100
+++ openh264-2.2.0/codec/processing/meson.build	2022-04-24 16:58:09.777345344 +0200
@@ -50,8 +50,6 @@
   else
     cpp_sources += asm_sources
   endif
-else
-  error('Unsupported cpu family @0@'.format(cpu_family))
 endif
 
 libprocessing = static_library('processing', cpp_sources, objs_asm,
diff -urN openh264-2.2.0.orig/meson.build openh264-2.2.0/meson.build
--- openh264-2.2.0.orig/meson.build	2022-01-28 05:57:33.000000000 +0100
+++ openh264-2.2.0/meson.build	2022-04-24 16:58:09.777345344 +0200
@@ -54,10 +54,7 @@
 casm_inc = []
 cpp_lib = '-lstdc++'
 
-# TODO: should rely on dependency('threads') instead and change the pkg-config
-# generator below
-pthread_dep = cpp.find_library('pthread', required : false)
-libm_dep = cpp.find_library('libm', required : false)
+libm_dep = cpp.find_library('m', required : false)
 deps += [libm_dep]
 
 if ['linux', 'android', 'ios', 'darwin'].contains(system)
@@ -89,8 +86,6 @@
     add_project_arguments('-DHAVE_NEON_ARM64', language: 'c')
     add_project_arguments('-DHAVE_NEON_ARM64', language: 'cpp')
     casm_inc = include_directories(join_paths('codec', 'common', 'arm64'))
-  else
-    error('FIXME: unhandled CPU family @0@ for @1@'.format(cpu_family, system))
   endif
 
   if ['ios', 'darwin', 'android'].contains(system)
@@ -184,47 +179,24 @@
 subdir ('codec')
 subdir ('test')
 
-libopenh264_shared = library('openh264',
-  link_with: [libcommon, libprocessing, libencoder, libdecoder],
+libopenh264 = library('openh264',
+  link_whole: [libcommon, libprocessing, libencoder, libdecoder],
   install: true,
   soversion: major_version,
   version: meson.project_version(),
   vs_module_defs: 'openh264.def',
   dependencies: deps)
 
-pkg_install_dir = '@0@/pkgconfig'.format(get_option('libdir'))
-
-foreach t : ['', '-static']
-  pkgconf = configuration_data()
-  pkgconf.set('prefix', join_paths(get_option('prefix')))
-  pkgconf.set('libdir', '${prefix}/@0@'.format(get_option('libdir')))
-  pkgconf.set('VERSION', meson.project_version())
-  pkglibs = cpp_lib
-  if libm_dep.found()
-    pkglibs += ' -lm'
-  endif
-  if pthread_dep.found()
-    pkglibs += ' -lpthread'
-  endif
-  if t == '-static'
-    pkgconf.set('LIBS', pkglibs)
-    pkgconf.set('LIBS_PRIVATE', '')
-  else
-    pkgconf.set('LIBS', '')
-    pkgconf.set('LIBS_PRIVATE', pkglibs)
-  endif
-
-  configure_file(
-    input: 'openh264.pc.in',
-    output: 'openh264@0@.pc'.format(t),
-    install: t == '-static' ? false : true,
-    install_dir: t == '-static' ? '' : pkg_install_dir,
-    configuration: pkgconf)
-endforeach
-
 openh264_dep = declare_dependency(
-  link_with: libopenh264_shared,
+  link_with: libopenh264,
   include_directories: include_directories('include'),
   dependencies: deps + api_header_deps)
 
+pkg = import('pkgconfig')
+pkg.generate(libopenh264,
+  description: 'OpenH264 is a codec library which supports H.264 encoding ' +
+               'and decoding. It is suitable for use in real time ' +
+               'applications such as WebRTC.',
+)
+
 subdir ('include')
