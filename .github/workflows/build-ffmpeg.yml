name: build-ffmpeg
on:
  push:
    branches: main
    paths-ignore:
      - '**.md'
      - '**.rst'
      - '**.txt'
  pull_request:
    branches: main
    paths-ignore:
      - '**.md'
      - '**.rst'
      - '**.txt'
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
            shell: bash
          - os: macos-13
            arch: x86_64
            shell: bash
          - os: ubuntu-24.04-arm
            arch: aarch64
            shell: bash
          - os: ubuntu-24.04
            arch: i686
            shell: bash
          - os: ubuntu-24.04
            arch: x86_64
            shell: bash
          - os: windows-latest
            arch: AMD64
            shell: 'msys2 {0}'
            msys_system: UCRT64
            msys_prefix: mingw-w64-ucrt-x86_64
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Set deployment target
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        run: echo "MACOSX_DEPLOYMENT_TARGET=12.0" >> $GITHUB_ENV
      - name: Install packages for macOS
        if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
        run: |
          brew update
          brew unlink gettext libidn2 libpng libtiff libunistring libx11 libxau libxcb libxdmcp little-cms2 unbound
      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          install: base-devel openssl-devel ${{ matrix.msys_prefix }}-cc ${{ matrix.msys_prefix }}-gperf ${{ matrix.msys_prefix }}-nasm
          msystem: ${{ matrix.msys_system }}
          path-type: inherit
          release: false
      - name: Build FFmpeg
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BEFORE_BUILD: python scripts/build-ffmpeg.py /tmp/vendor --community --enable-cuda
          CIBW_BEFORE_BUILD_WINDOWS: python scripts\build-ffmpeg.py C:\cibw\vendor --community --enable-cuda
          CIBW_BUILD: cp311-*
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: LD_LIBRARY_PATH=/tmp/vendor/lib:$LD_LIBRARY_PATH auditwheel repair -w {dest_dir} {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:\cibw\vendor\bin -w {dest_dir} {wheel}
          CIBW_TEST_COMMAND: python -c "import dummy"
        run: |
          pip install cibuildwheel delvewheel
          cibuildwheel --output-dir output
          rm -f output/*.whl
      - name: Upload FFmpeg
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.os }}-${{ matrix.arch }}
          path: output/
